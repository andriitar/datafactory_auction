{
	"name": "post token",
	"properties": {
		"activities": [
			{
				"name": "token request",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://eu.battle.net/oauth/token",
					"method": "POST",
					"headers": {
						"grant-type": "client_credentials",
						"content-type": "application/x-www-form-urlencoded"
					},
					"body": "grant_type=client_credentials",
					"authentication": {
						"type": "Basic",
						"username": "3744a5c5d4ca4731a2abdbc8ec12f05f",
						"password": {
							"type": "AzureKeyVaultSecret",
							"store": {
								"referenceName": "AzureKeyVault1",
								"type": "LinkedServiceReference"
							},
							"secretName": "tokenClientSecret"
						}
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "token request",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "auth_token",
					"value": {
						"value": "@activity('token request').output.access_token",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greaterOrEquals(activity('token request').output.expires_in,1)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Set variable1_copy2",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "auth_token",
								"value": {
									"value": "@string(activity('token request').output.token_type)",
									"type": "Expression"
								}
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Set variable1_copy1",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "auth_token",
								"value": {
									"value": "@activity('token request').output.access_token",
									"type": "Expression"
								}
							}
						}
					]
				}
			}
		],
		"variables": {
			"last_updated_time": {
				"type": "String"
			},
			"auth_token": {
				"type": "String"
			},
			"tokenprice": {
				"type": "String"
			}
		},
		"annotations": []
	}
}